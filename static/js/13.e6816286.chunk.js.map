{"version":3,"sources":["Demo/stopBus/Table.js","Demo/stopBus/tableData.js","Demo/stopBus/TableForm.js","Demo/stopBus/stopBus.js","services/control.service.js"],"names":["Table2","data","headers","handleRemove","startEditing","editIdx","handleChange","stopEditing","Table","className","striped","hover","size","scope","map","h","i","key","name","r","currentlyEditing","k","type","onChange","e","prop","value","onClick","row","TableForm","state","latitude","longitude","errors","validateFields","iserror","push","setState","handleInputChange","target","createRow","preventDefault","newItem","props","addRow","currentTarget","reset","createSchedule","console","log","Row","Col","this","role","onSubmit","autoComplete","md","placeholder","step","React","Component","StopBus","routeList","stopBusList","stopBusId","btn","editStopBus","stopbus","editList","detail","s","_id","item","prevState","nextState","filter","j","setRoute","route","createStopBus","length","toast","error","d","controlService","post","then","res","cleanForm","success","catch","JSON","stringify","stopBusModify","put","stopBusDel","del","warning","getStopBus","getRoutes","get","stopBus","Card","Body","bordered","id","Form","Group","as","controlId","Label","column","sm","Control","index","Button","variant","disabled","closeButton","position","ControlService","url","api","body","delete"],"mappings":"uRAuEeA,G,YA7BA,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,aAAcC,EAA9C,EAA8CA,QAASC,EAAvD,EAAuDA,aAAcC,EAArE,EAAqEA,YAArE,OACb,6BAEE,kBAACC,EAAA,EAAD,CAAOC,UAAU,aAAcC,SAAO,EAAEC,OAAK,EAACC,KAAK,MACjD,+BACE,4BACE,wBAAIC,MAAM,OAAV,KACCX,EAAQY,KAAI,SAACC,EAAGC,GAAJ,OACX,wBAAIC,IAAG,aAAQD,GAAKH,MAAM,OAAOE,EAAEG,SAErC,wBAAIL,MAAM,QACV,wBAAIA,MAAM,UAGd,+BACGZ,EAAKa,KAAI,SAACK,EAAGH,GAAJ,OAtDN,SAACG,EAAGH,EAAGd,EAASC,EAAcC,EAAcC,EAASC,EAAcC,GAE7E,IAAMa,EAAmBf,IAAYW,EAErC,OAEE,wBAAIC,IAAG,aAAQD,IACb,4BAAKA,EAAE,GACNd,EAAQY,KAAI,SAACC,EAAGM,GAAJ,OACX,wBAAIJ,IAAG,aAAQI,IACZD,EACC,2BACEE,KAAK,OACLb,UAAU,eACVc,SAAU,SAACC,GAAD,OAAOlB,EAAakB,EAAGT,EAAEU,KAAMT,IACzCE,KAAMH,EAAEU,KACRC,MAAOP,EAAEJ,EAAEU,QACRN,EAAEJ,EAAEU,UAIdL,EACC,4BAAI,uBAAGX,UAAU,iBACfkB,QAAS,kBAAMpB,EAAYS,KADzB,iBAIJ,4BAAI,uBAAGP,UAAU,iBACfkB,QAAS,kBAAMvB,EAAaY,KAD1B,SAIN,4BAAI,uBAAGP,UAAU,iBACfkB,QAAS,kBAAMxB,EAAaa,KAD1B,YAyBAY,CAAIT,EAAGH,EAAGd,EACRC,EACAC,EACAC,EACAC,EACAC,WCjDGL,EAdC,CACZ,CACIgB,KAAM,gBACNO,KAAM,QAEV,CACIP,KAAM,WACNO,KAAM,YAEV,CACIP,KAAM,YACNO,KAAM,c,QCwHCI,E,4MA/HXC,MAAQ,CACJC,SAAU,GACVC,UAAW,GACXd,KAAM,GACNe,OAAQ,I,EAGZC,eAAiB,WACb,IAAIC,GAAU,EACRF,EAAS,GAkBf,OAhBK,EAAKH,MAAMC,WACZI,GAAU,EACVF,EAAOG,KAAK,6BAEX,EAAKN,MAAME,YACZG,GAAU,EACVF,EAAOG,KAAK,8BAEX,EAAKN,MAAMZ,OACZiB,GAAU,EACVF,EAAOG,KAAK,2BAEZD,GACA,EAAKE,SAAS,CAAEJ,WAGbE,G,EAGXG,kBAAoB,SAACd,GACjB,IAAMN,EAAOM,EAAEe,OAAOrB,KACtB,EAAKmB,SAAL,eACKnB,EAAOM,EAAEe,OAAOb,S,EAIzBc,UAAY,SAAChB,GACTA,EAAEiB,iBACF,IAAQvB,EAAS,EAAKY,MAAdZ,KACFwB,EAAU,EAAKZ,MACV,EAAKI,mBAEZ,EAAKS,MAAMC,OAAOF,GAClB,EAAKL,SAAS,CACVN,SAAU,GACVC,UAAW,GACXd,KAAMA,EACNe,OAAQ,KAEZT,EAAEqB,cAAcC,U,EAKxBC,eAAiB,SAACvB,GACdA,EAAEiB,iBAEF,IAAMC,EAAU,EAAKZ,MACrBN,EAAEqB,cAAcC,QAChBE,QAAQC,IAAIP,I,4CAKhB,WACI,OACI,oCACI,kBAAC,IAAD,KAEI,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAEKC,KAAKtB,MAAMG,QACR,yBAAKxB,UAAU,sBAAsB4C,KAAK,SACrCD,KAAKtB,MAAMG,OAAOnB,KAAI,SAAAU,GAAC,OAAI,4BAAKA,OAGzC,0BAAM8B,SAAUF,KAAKZ,UAAWe,aAAa,OACzC,kBAACL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKK,GAAI,IACL,2BAAOlC,KAAK,OACRC,SAAU6B,KAAKd,kBACf7B,UAAU,sBACVgD,YAAY,uBACZvC,KAAK,WAIjB,kBAACgC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKK,GAAI,GACL,2BAAOlC,KAAK,SACRC,SAAU6B,KAAKd,kBACf7B,UAAU,iBACVgD,YAAY,WACZvC,KAAK,WAAWwC,KAAK,SAE7B,kBAACP,EAAA,EAAD,CAAKK,GAAI,GACL,2BAAOlC,KAAK,SACRC,SAAU6B,KAAKd,kBACf7B,UAAU,gBACVgD,YAAY,YACZvC,KAAK,YAAYwC,KAAK,SAE9B,kBAACP,EAAA,EAAD,CAAKK,GAAI,GACL,4BAAQlC,KAAK,SACTb,UAAU,yCADd,sB,GA1GhBkD,IAAMC,WCQxBC,E,kDACF,aAAe,IAAD,8BACV,gBAKJ/B,MAAQ,CACJ7B,KAAM,GACNC,QAASA,EACTG,SAAU,EACVyD,UAAW,GACXC,YAAa,GACbC,UAAW,GACXC,KAAK,GAbK,EA0BdC,YAAc,SAACC,GAEX,IAAMC,EAAWD,EAAQE,OAAOvD,KAAI,SAAAwD,GAAC,MAE7B,CACIpD,KAAMoD,EAAEpD,KACRa,SAAUuC,EAAEvC,SACZC,UAAWsC,EAAEtC,cAIzB,EAAKK,SAAS,CACV4B,KAAK,EACLhE,KAAMmE,EACNJ,UAAWG,EAAQI,MAEvBvB,QAAQC,IAAImB,IA1CF,EA8CdxB,OAAS,SAAC4B,GACN,IAAMC,EAAY,EAAK3C,MAAM7B,KACvByE,EAAS,sBAAOD,GAAP,CAAkBD,IACjC,EAAKnC,SAAS,CACVpC,KAAMyE,KAlDA,EAwDdvE,aAAe,SAACa,GACZ,EAAKqB,SAAS,CACVpC,KAAM,EAAK6B,MAAM7B,KAAK0E,QAAO,SAACH,EAAMI,GAChC,OAAOA,IAAM5D,QA3DX,EAgEdZ,aAAe,SAACY,GACZ,EAAKqB,SAAS,CAAEhC,QAASW,KAjEf,EAoEdT,YAAc,SAACS,GACX,EAAKqB,SAAS,CAAEhC,SAAU,KArEhB,EAwEdC,aAAe,SAACkB,EAAGN,EAAMF,GACrB,IAAQU,EAAUF,EAAEe,OAAZb,MACR,EAAKW,SAAS,CACVpC,KAAM,EAAK6B,MAAM7B,KAAKa,KAClB,SAACc,EAAKgD,GAAN,OAAaA,IAAM5D,EAAN,2BAAeY,GAAf,kBAAqBV,EAAOQ,IAAUE,QA5EjD,EA2FdiD,SAAW,SAACrD,GACR,IAAQE,EAAUF,EAAEe,OAAZb,MACR,EAAKW,SAAS,CACVyC,MAAOpD,IAEXsB,QAAQC,IAAIvB,IAhGF,EAmGdqD,cAAgB,WACZ,IAAMD,EAAQ,EAAKhD,MAAMgD,MAEzB,GAAI,EAAKhD,MAAM7B,KAAK+E,QAAU,EAC1BC,IAAMC,MAAM,8BADhB,CAKA,IAAMb,EAAS,EAAKvC,MAAM7B,KAAKa,KAAI,SAAAqE,GAAC,MAAK,CAACjE,KAAMiE,EAAEjE,KAAMa,SAAUoD,EAAEpD,SAAUC,UAAWmD,EAAEnD,cAI3FoD,IAAeC,KAAK,WAAY,CAAEP,QAAOT,WAAUiB,MAAK,SAACC,GAErD,EAAKC,YACLP,IAAMQ,QAAQ,4CACfC,OAAM,SAAAR,GACLD,IAAMC,MAAMS,KAAKC,UAAUV,EAAMjF,KAAKgC,OAAQ,KAAM,SApH9C,EAwHd4D,cAAe,WACX,GAAI,EAAK/D,MAAM7B,KAAK+E,QAAU,GAAK,EAAKlD,MAAMkC,WAAa,EACvDiB,IAAMC,MAAM,8BADhB,CAIA,IAAMb,EAAS,EAAKvC,MAAM7B,KAAKa,KAAI,SAAAqE,GAAC,MAAK,CAACjE,KAAMiE,EAAEjE,KAAMa,SAAUoD,EAAEpD,SAAUC,UAAWmD,EAAEnD,cAE3FoD,IAAeU,IAAf,mBAA+B,EAAKhE,MAAMkC,WAAa,CAAGK,WAAUiB,MAAK,SAACC,GACtE,EAAKC,YACLP,IAAMQ,QAAQ,gDACfC,OAAM,SAAAR,GACLD,IAAMC,MAAMS,KAAKC,UAAUV,EAAMjF,KAAKgC,OAAQ,KAAM,SAnI9C,EAuId8D,WAAa,SAAC5B,GACViB,IAAeY,IAAf,mBAA+B7B,EAAQI,MAAOe,MAAK,SAACC,GAChD,EAAKC,YACLP,IAAMgB,QAAQ,6CACfP,OAAM,SAAAR,GACLD,IAAMC,MAAMS,KAAKC,UAAUV,EAAMjF,KAAKgC,OAAQ,KAAM,QA5I9C,EAgJduD,UAAY,WACR,EAAKnD,SAAS,CACVpC,KAAM,GACN8D,YAAa,GACbE,KAAK,IAGT,EAAKiC,cArJL,EAAKC,YACL,EAAKD,aAHK,E,8CAgBd,WAAc,IAAD,OACTd,IAAegB,IAAI,YAAYd,MAAK,SAACC,GACjC,EAAKlD,SAAS,CAAE0B,YAAawB,EAAItF,KAAKoG,aAGvCX,OAAM,SAAAR,GACLlC,QAAQC,IAAIiC,Q,uBA2DpB,WAAa,IAAD,OACRE,IAAegB,IAAI,UAAUd,MAAK,SAACC,GAC/B,EAAKlD,SAAS,CAAEyB,UAAWyB,EAAItF,KAAK6E,QACpC,EAAKzC,SAAS,CAAEyC,MAAOS,EAAItF,KAAK6E,MAAM,GAAGP,SAE1CmB,OAAM,SAAAR,GACLlC,QAAQC,IAAIiC,Q,oBAoEpB,WAAU,IAAD,OAEL,OACI,yBAAKzE,UAAU,aACX,kBAACyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKK,GAAI,IACL,kBAAC8C,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,KAAN,KACI,kBAACrD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKK,GAAI,IAEL,kBAAChD,EAAA,EAAD,CAAOE,SAAO,EAAC8F,UAAQ,EAAC7F,OAAK,EAACC,KAAK,MAC/B,+BACI,4BACI,iCACA,oCACA,sCACA,0CAGR,+BAEQwC,KAAKtB,MAAMiC,YAAYjD,KAAI,SAACuF,EAASrF,GAAV,OACvB,wBAAIC,IAAKD,GACL,wBAAIC,IAAKD,EAAI,GAAIA,EAAI,GACrB,wBAAIC,IAAKoF,EAAQI,IAAKJ,EAAQvB,MAAM5D,MACpC,4BAAI,uBAAGT,UAAU,iCACbkB,QAAS,kBAAM,EAAKuC,YAAYmC,KADhC,SAGJ,4BAAI,uBAAG5F,UAAU,gCACbkB,QAAS,kBAAM,EAAKoE,WAAWM,KAD/B,mBAYhC,kBAACnD,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAAKK,GAAI,GAEL,kBAACkD,EAAA,EAAKC,MAAN,CAAYC,GAAI1D,IAAK2D,UAAU,8BAC3B,kBAACH,EAAA,EAAKI,MAAN,CAAYC,QAAM,EAACC,GAAG,KAAtB,QACA,kBAAC7D,EAAA,EAAD,CAAK6D,GAAG,MACJ,kBAACN,EAAA,EAAKO,QAAN,CAAcL,GAAG,SACb1F,KAAK,QACLK,SACI6B,KAAKyB,UAERzB,KAAKtB,MAAMgC,UAAUhD,KAAI,WAAgBoG,GAAhB,IAAG3C,EAAH,EAAGA,IAAKrD,EAAR,EAAQA,KAAR,OACtB,4BAAQQ,MAAO6C,EAAKtD,IAAKiG,GAAzB,IAAmChG,EAAnC,YAUpB,kBAACiC,EAAA,EAAD,CAAKK,GAAI,GAEL,kBAAC2D,EAAA,EAAD,CAAQC,QAAQ,UAAUzF,QAASyB,KAAK2B,cAAesC,SAAUjE,KAAKtB,MAAMmC,IAAMb,KAAKtB,MAAM7B,KAAK+E,OAAS,GAA3G,WAGA,kBAACmC,EAAA,EAAD,CAAQC,QAAQ,UAAUzF,QAASyB,KAAKyC,cAAewB,UAAWjE,KAAKtB,MAAMmC,KAA7E,UAGA,kBAACkD,EAAA,EAAD,CAAQC,QAAQ,YAAYzF,QAASyB,KAAKoC,WAA1C,aAKR,yBAAK/E,UAAU,aACf,kBAACyC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKK,GAAI,GACL,kBAAC,EAAD,CACIZ,OAAQQ,KAAKR,UAIrB,kBAACO,EAAA,EAAD,CAAKK,GAAI,GACL,kBAAC,EAAD,CAEItD,QAASA,EACTD,KAAMmD,KAAKtB,MAAM7B,KACjBE,aAAciD,KAAKjD,aACnBC,aAAcgD,KAAKhD,aACnBC,QAAS+C,KAAKtB,MAAMzB,QACpBC,aAAc8C,KAAK9C,aACnBC,YAAa6C,KAAK7C,mBAY1C,kBAAC,IAAD,CAAgB+G,aAAa,EAAOC,SAAS,uB,GAtQ3C5D,IAAMC,WAmRbC,a,0DC5RT2D,E,mFAEF,SAAKC,GACD,OAAOC,IAAItB,IAAIqB,K,kBAInB,SAAMA,EAAKE,GACP,OAAOD,IAAIrC,KAAMoC,EAAKE,K,iBAI1B,SAAKF,EAAKE,GACN,OAAOD,IAAI5B,IAAK2B,EAAKE,K,iBAIzB,SAAKF,GACD,OAAOC,IAAIE,OAAQH,O,KAKZ,QAAID,G","file":"static/js/13.e6816286.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Schedule/index.scss';\r\nimport { Table } from 'react-bootstrap';\r\nconst row = (r, i, headers, handleRemove, startEditing, editIdx, handleChange, stopEditing) => {\r\n\r\n  const currentlyEditing = editIdx === i\r\n\r\n  return (\r\n\r\n    <tr key={`tr-${i}`}>\r\n      <td>{i+1}</td>\r\n      {headers.map((h, k) => (\r\n        <td key={`td-${k}`}>\r\n          {currentlyEditing ?\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => handleChange(e, h.prop, i)}\r\n              name={h.prop}\r\n              value={r[h.prop]}\r\n            /> : r[h.prop]}\r\n        </td>\r\n      ))}\r\n\r\n      {currentlyEditing ?\r\n        <td><i className=\"material-icons\"\r\n          onClick={() => stopEditing(i)}>check_circle</i>\r\n        </td> :\r\n\r\n        <td><i className=\"material-icons\"\r\n          onClick={() => startEditing(i)}>edit</i>\r\n        </td>}\r\n\r\n      <td><i className=\"material-icons\"\r\n        onClick={() => handleRemove(i)}>delete</i>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Table2 = ({ data, headers, handleRemove, startEditing, editIdx, handleChange, stopEditing }) => (\r\n  < div >\r\n\r\n    <Table className=\"sizeTable \"  striped  hover size=\"sm\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          {headers.map((h, i) =>\r\n            <th key={`th-${i}`} scope=\"col\">{h.name}</th>\r\n          )}\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <tbody >\r\n        {data.map((r, i) =>\r\n          row(r, i, headers,\r\n            handleRemove,\r\n            startEditing,\r\n            editIdx,\r\n            handleChange,\r\n            stopEditing))}\r\n      </tbody>\r\n    </Table>\r\n\r\n  </div >\r\n)\r\n\r\n\r\nexport default Table2\r\n\r\n\r\n","const headers = [\r\n    {\r\n        name: 'Parada de bus',\r\n        prop: 'name'\r\n    },\r\n    {\r\n        name: 'Latitude',\r\n        prop: 'latitude'\r\n    },\r\n    {\r\n        name: 'Longitude',\r\n        prop: 'longitude'\r\n    },\r\n]\r\nexport default headers","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Aux from \"../../hoc/_Aux\";\r\nclass TableForm extends React.Component {\r\n    state = {\r\n        latitude: '',\r\n        longitude: '',\r\n        name: '',\r\n        errors: ''\r\n    };\r\n\r\n    validateFields = () => {\r\n        let iserror = false\r\n        const errors = []\r\n\r\n        if (!this.state.latitude) {\r\n            iserror = true\r\n            errors.push('La latitude es requerida')\r\n        }\r\n        if (!this.state.longitude) {\r\n            iserror = true\r\n            errors.push('La longitude es requerida')\r\n        }\r\n        if (!this.state.name) {\r\n            iserror = true\r\n            errors.push('El nombre es requerido')\r\n        }\r\n        if (iserror) {\r\n            this.setState({ errors })\r\n        }\r\n\r\n        return iserror\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const name = e.target.name\r\n        this.setState({\r\n            [name]: e.target.value\r\n        })\r\n    }\r\n\r\n    createRow = (e) => {\r\n        e.preventDefault();\r\n        const { name } = this.state;\r\n        const newItem = this.state\r\n        const er = this.validateFields()\r\n        if (!er) {\r\n            this.props.addRow(newItem)\r\n            this.setState({\r\n                latitude: '',\r\n                longitude: '',\r\n                name: name,\r\n                errors: ''\r\n            })\r\n            e.currentTarget.reset()\r\n\r\n        }\r\n    }\r\n\r\n    createSchedule = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newItem = this.state\r\n        e.currentTarget.reset()\r\n        console.log(newItem);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Aux>\r\n\r\n                    <Row>\r\n                        <Col>\r\n\r\n                            {this.state.errors &&\r\n                                <div className=\"alert alert-warning\" role=\"alert\">\r\n                                    {this.state.errors.map(e => <li>{e}</li>)}\r\n                                </div>\r\n                            }\r\n                            <form onSubmit={this.createRow} autoComplete=\"off\" >\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <input type=\"text\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"  form-control mb-2\"\r\n                                            placeholder=\"Nombre parada de bus\"\r\n                                            name=\"name\" />\r\n                                    </Col>\r\n                                   \r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={4}>\r\n                                        <input type=\"number\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"  form-control\"\r\n                                            placeholder=\"latitude\"\r\n                                            name=\"latitude\" step=\"any\"  />\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <input type=\"number\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\" form-control\"\r\n                                            placeholder=\"longitude\"\r\n                                            name=\"longitude\" step=\"any\" />\r\n                                    </Col>\r\n                                    <Col md={4} >\r\n                                        <button type=\"submit\"\r\n                                            className=\"btn-block btn  btn-raised btn-primary\" >\r\n                                            Agregar\r\n                                        </button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </form>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Aux>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default TableForm\r\n\r\n\r\n","import React from 'react';\r\nimport { Row, Col, Card, Form, Button, Table } from 'react-bootstrap';\r\n\r\nimport controlService from '../../services/control.service';\r\n\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Table2 from './Table';\r\nimport headers from './tableData';\r\nimport TableForm from './TableForm';\r\n\r\nclass StopBus extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.getRoutes();\r\n        this.getStopBus();\r\n    }\r\n\r\n    state = {\r\n        data: [],\r\n        headers: headers,\r\n        editIdx: -1,\r\n        routeList: [],\r\n        stopBusList: [],\r\n        stopBusId: '',\r\n        btn: false\r\n    };\r\n\r\n    getStopBus() {\r\n        controlService.get(\"/stopBus\").then((res) => {\r\n            this.setState({ stopBusList: res.data.stopBus });\r\n\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    editStopBus = (stopbus) => {\r\n       \r\n        const editList = stopbus.detail.map(s =>\r\n            (\r\n                {\r\n                    name: s.name,\r\n                    latitude: s.latitude,\r\n                    longitude: s.longitude\r\n                }\r\n            )\r\n        );\r\n        this.setState({\r\n            btn: true,\r\n            data: editList,\r\n            stopBusId: stopbus._id\r\n        })\r\n        console.log(editList);\r\n    }\r\n\r\n\r\n    addRow = (item) => {\r\n        const prevState = this.state.data\r\n        const nextState = [...prevState, item]\r\n        this.setState({\r\n            data: nextState\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleRemove = (i) => {\r\n        this.setState({\r\n            data: this.state.data.filter((item, j) => {\r\n                return j !== i\r\n            })\r\n        })\r\n    }\r\n\r\n    startEditing = (i) => {\r\n        this.setState({ editIdx: i })\r\n    }\r\n\r\n    stopEditing = (i) => {\r\n        this.setState({ editIdx: -1 })\r\n    }\r\n\r\n    handleChange = (e, name, i) => {\r\n        const { value } = e.target\r\n        this.setState({\r\n            data: this.state.data.map(\r\n                (row, j) => (j === i ? { ...row, [name]: value } : row)\r\n            )\r\n        })\r\n    }\r\n\r\n    getRoutes() {\r\n        controlService.get(\"/route\").then((res) => {\r\n            this.setState({ routeList: res.data.route });\r\n            this.setState({ route: res.data.route[0]._id });\r\n\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    setRoute = (e) => {\r\n        const { value } = e.target\r\n        this.setState({\r\n            route: value\r\n        })\r\n        console.log(value)\r\n    }\r\n\r\n    createStopBus = () => {\r\n        const route = this.state.route;\r\n        \r\n        if (this.state.data.length <= 0) {\r\n            toast.error(\"Ingrese paradas de bus\");\r\n            return;\r\n        }\r\n\r\n        const detail = this.state.data.map(d => ({name: d.name, latitude: d.latitude, longitude: d.longitude }));\r\n\r\n\r\n       \r\n        controlService.post(\"/stopBus\", { route, detail }).then((res) => {\r\n         \r\n            this.cleanForm();\r\n            toast.success(\"Paradas de bus creadas correctamente.\");\r\n        }).catch(error => {\r\n            toast.error(JSON.stringify(error.data.errors, null, 2));\r\n        });\r\n    }\r\n\r\n    stopBusModify= ()=>{\r\n        if (this.state.data.length <= 0 || this.state.stopBusId <= 0) {\r\n            toast.error(\"Ingrese paradas de bus\");\r\n            return;\r\n        }\r\n        const detail = this.state.data.map(d => ({name: d.name, latitude: d.latitude, longitude: d.longitude }));\r\n\r\n        controlService.put(`/stopBus/${this.state.stopBusId}`, {  detail }).then((res) => {\r\n            this.cleanForm();\r\n            toast.success(\"Paradas de bus modificadas correctamente.\");\r\n        }).catch(error => {\r\n            toast.error(JSON.stringify(error.data.errors, null, 2));\r\n        });\r\n    }\r\n\r\n    stopBusDel = (stopbus) =>{\r\n        controlService.del(`/stopBus/${stopbus._id}`).then((res) => {\r\n            this.cleanForm();\r\n            toast.warning(\"Parada de bus eliminada correctamente.\");\r\n        }).catch(error => {\r\n            toast.error(JSON.stringify(error.data.errors, null, 2));\r\n        });\r\n    }\r\n\r\n    cleanForm = ()=>{\r\n        this.setState({\r\n            data: [],\r\n            stopBusList: [],\r\n            btn: false\r\n\r\n        });\r\n        this.getStopBus();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\" >\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col md={12}>\r\n\r\n                                        <Table striped bordered hover size=\"sm\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>#</th>\r\n                                                    <th>Ruta</th>\r\n                                                    <th>Editar</th>\r\n                                                    <th>Eliminar</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                    this.state.stopBusList.map((stopBus, i) => (\r\n                                                        <tr key={i}>\r\n                                                            <td key={i + 1}>{i + 1}</td>\r\n                                                            <td key={stopBus.id}>{stopBus.route.name}</td>\r\n                                                            <td><i className=\"material-icons btn btn-warning\"\r\n                                                                onClick={() => this.editStopBus(stopBus)}>edit</i>\r\n                                                            </td>\r\n                                                            <td><i className=\"material-icons btn btn-danger\"\r\n                                                                onClick={() => this.stopBusDel(stopBus)}>delete</i>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    ))\r\n                                                }\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                                <Row>\r\n\r\n                                    <Col md={6}>\r\n\r\n                                        <Form.Group as={Row} controlId=\"exampleForm.ControlSelect1\">\r\n                                            <Form.Label column sm=\"2\">Ruta</Form.Label>\r\n                                            <Col sm=\"10\">\r\n                                                <Form.Control as=\"select\"\r\n                                                    name=\"route\"\r\n                                                    onChange={\r\n                                                        this.setRoute\r\n                                                    } >\r\n                                                    {this.state.routeList.map(({ _id, name }, index) =>\r\n                                                        <option value={_id} key={index} > {name} </option>\r\n                                                    )}\r\n\r\n                                                </Form.Control>\r\n                                            </Col>\r\n\r\n\r\n                                        </Form.Group>\r\n\r\n                                    </Col>\r\n                                    <Col md={6}  >\r\n\r\n                                        <Button variant=\"success\" onClick={this.createStopBus} disabled={this.state.btn | this.state.data.length < 1} >\r\n                                            Guardar\r\n                                        </Button>\r\n                                        <Button variant=\"warning\" onClick={this.stopBusModify} disabled={!this.state.btn } >\r\n                                            Editar\r\n                                        </Button>\r\n                                        <Button variant=\"secondary\" onClick={this.cleanForm}  >\r\n                                            Limpiar\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <div className=\"clearfix\"></div>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <TableForm\r\n                                            addRow={this.addRow}\r\n\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md={6} >\r\n                                        <Table2\r\n                                        \r\n                                            headers={headers}\r\n                                            data={this.state.data}\r\n                                            handleRemove={this.handleRemove}\r\n                                            startEditing={this.startEditing}\r\n                                            editIdx={this.state.editIdx}\r\n                                            handleChange={this.handleChange}\r\n                                            stopEditing={this.stopEditing}\r\n\r\n                                        />\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </Card.Body>\r\n\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <ToastContainer closeButton={false} position=\"bottom-right\" />\r\n                </Row>\r\n\r\n\r\n\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default StopBus;\r\n","import api from './api';\r\n\r\nclass ControlService {\r\n    //get services\r\n    get( url ) {\r\n        return api.get(url);\r\n    }\r\n\r\n    //post services\r\n    post( url, body ) {\r\n        return api.post( url, body );\r\n    }\r\n\r\n    //put services\r\n    put( url, body ) {\r\n        return api.put( url, body );\r\n    }\r\n\r\n    //put services\r\n    del( url ) {\r\n        return api.delete( url );\r\n    }\r\n\r\n}\r\n\r\nexport default new ControlService();"],"sourceRoot":""}