{"version":3,"sources":["Demo/Authentication/SignUp/SignUp1.js","services/api.js","services/token.service.js","services/auth.service.js"],"names":["SignUp1","props","state","isToggleOn","handleClick","bind","login","onChangeUsername","onChangePassword","username","password","this","setState","prevState","AuthService","then","history","push","window","location","reload","error","console","log","e","target","value","className","type","placeholder","name","onChange","onClick","React","Component","instance","axios","create","baseURL","headers","interceptors","request","use","config","token","TokenService","getLocalAccessToken","Promise","reject","response","res","err","a","originalConfig","url","status","_retry","post","refreshToken","getLocalRefreshToken","rs","accessToken","data","updateLocalAccessToken","user","JSON","parse","localStorage","getItem","setItem","stringify","removeItem","email","api","setUser","removeUser","getUser"],"mappings":"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","file":"static/js/10.7412cba3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nimport './../../../assets/scss/style.scss';\r\nimport Aux from \"../../../hoc/_Aux\";\r\nimport Breadcrumb from \"../../../App/layout/AdminLayout/Breadcrumb\";\r\nimport AuthService from './../../../services/auth.service'\r\n\r\nclass SignUp1 extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isToggleOn: true };\r\n\r\n        // Este enlace es necesario para hacer que `this` funcione en el callback\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.login = this.login.bind(this);\r\n        this.onChangeUsername = this.onChangeUsername.bind(this);\r\n        this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n\r\n        };\r\n    }\r\n\r\n    handleClick() {\r\n        this.setState(prevState => ({\r\n            isToggleOn: !prevState.isToggleOn\r\n        }));\r\n    }\r\n\r\n    login() {\r\n        \r\n        \r\n        AuthService.login(this.state.username, this.state.password).then(\r\n            () => {\r\n                this.props.history.push(\"/register/stop-bus\");\r\n                window.location.reload();\r\n            }, error => {\r\n                console.log(error);\r\n            }\r\n        )\r\n    }\r\n\r\n    onChangeUsername(e) {\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangePassword(e) {\r\n        this.setState({\r\n            password: e.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Aux>\r\n                <Breadcrumb />\r\n                <div className=\"auth-wrapper \">\r\n                    <div className=\"auth-content\">\r\n                        <div className=\"auth-bg\">\r\n                            <span className=\"r\" />\r\n                            <span className=\"r s\" />\r\n                            <span className=\"r s\" />\r\n                            <span className=\"r\" />\r\n                        </div>\r\n                        <div className=\"card\">\r\n                            <div className=\"card-body text-center\">\r\n                                <div className=\"mb-4\">\r\n                                    <i className=\"feather icon-user-plus auth-icon\" />\r\n                                </div>\r\n                                <h3 className=\"mb-4\">Buses Administración</h3>\r\n                                <div className=\"input-group mb-3\">\r\n                                    <input type=\"text\" className=\"form-control\" placeholder=\"Username\" name=\"username\"\r\n                                        value={this.state.username}\r\n                                        onChange={this.onChangeUsername}\r\n                                        />\r\n                                </div>\r\n                                <div className=\"input-group mb-4\">\r\n                                    <input type=\"password\" className=\"form-control\" placeholder=\"password\" type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChangePassword}\r\n                                         />\r\n                                </div>\r\n\r\n                                <button className=\"btn btn-secondary shadow-2 mb-4\" onClick={this.login}>Iniciar Sesión</button>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUp1;","import axios from \"axios\";\r\nimport TokenService from \"./token.service\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"http://localhost:8080/api\",\r\n  //baseURL: \"https://appbus-backend.herokuapp.com/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = TokenService.getLocalAccessToken();\r\n    if (token) {\r\n      // config.headers[\"Authorization\"] = 'Bearer ' + token;  // for Spring Boot back-end\r\n      config.headers[\"x-token\"] = token; // for Node.js Express back-end\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  async (err) => {\r\n    const originalConfig = err.config;\r\n\r\n    if (originalConfig.url !== \"/auth/signin\" && err.response) {\r\n      // Access Token was expired\r\n      if (err.response.status === 401 && !originalConfig._retry) {\r\n        originalConfig._retry = true;\r\n\r\n        try {\r\n          const rs = await instance.post(\"/auth\", {\r\n            refreshToken: TokenService.getLocalRefreshToken(),\r\n          });\r\n\r\n          const { accessToken } = rs.data;\r\n          TokenService.updateLocalAccessToken(accessToken);\r\n\r\n          return instance(originalConfig);\r\n        } catch (_error) {\r\n          return Promise.reject(_error);\r\n        }\r\n      }else {\r\n        \r\n       return Promise.reject(err.response);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default instance;","class TokenService {\r\n    getLocalRefreshToken() {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      return user?.refreshToken;\r\n    }\r\n  \r\n    getLocalAccessToken() {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      return user?.token;\r\n    }\r\n  \r\n    updateLocalAccessToken(token) {\r\n      let user = JSON.parse(localStorage.getItem(\"user\"));\r\n      user.accessToken = token;\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n    }\r\n  \r\n    getUser() {\r\n      return JSON.parse(localStorage.getItem(\"user\"));\r\n    }\r\n  \r\n    setUser(user) {\r\n      console.log(JSON.stringify(user));\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n    }\r\n  \r\n    removeUser() {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n  }\r\n  \r\n  export default new TokenService();","import api from \"./api\";\r\nimport TokenService from \"./token.service\";\r\n\r\nclass AuthService {\r\n  login(email, password) {\r\n    return api\r\n      .post(\"/auth/login\", {\r\n        email,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data) {\r\n          TokenService.setUser(response.data);\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    TokenService.removeUser();\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return api.post(\"/auth/signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return TokenService.getUser();\r\n  }\r\n}\r\n\r\nexport default new AuthService();"],"sourceRoot":""}