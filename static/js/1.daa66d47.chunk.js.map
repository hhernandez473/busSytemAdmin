{"version":3,"sources":["../node_modules/react-bootstrap/esm/divWithClassName.js","../node_modules/react-bootstrap/esm/CardImg.js","../node_modules/react-bootstrap/esm/Card.js","../node_modules/react-bootstrap/esm/CardContext.js","../node_modules/react-bootstrap/esm/Col.js","../node_modules/clsx/dist/clsx.m.js","../../src/utils/propValidator.ts","../../src/utils/constant.ts","../../src/utils/cssTransition.tsx","../../src/utils/collapseToast.ts","../../src/core/eventManager.ts","../../src/hooks/useKeeper.ts","../../src/hooks/toastContainerReducer.ts","../../src/hooks/useToastContainer.ts","../../src/hooks/useToast.ts","../../src/components/CloseButton.tsx","../../src/components/ProgressBar.tsx","../../src/components/Icons.tsx","../../src/components/Toast.tsx","../../src/components/Transitions.tsx","../../src/components/ToastContainer.tsx","../../src/core/toast.tsx","../node_modules/react-bootstrap/esm/Row.js"],"names":["className","React","forwardRef","p","ref","createElement","_extends","classNames","_excluded","CardImg","_ref","bsPrefix","variant","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","context","createContext","DEVICE_SIZES","Col","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","apply","concat","toVal","mix","k","y","str","Array","isArray","tmp","x","i","arguments","isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canUseDom","window","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","position","preventExitTransition","done","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","e","node","duration","scrollHeight","style","requestAnimationFrame","setTimeout","collapseToast","useLayoutEffect","onEnter","useEffect","onExited","onExit","eventManager","list","emitQueue","on","this","set","event","off","cb","get","cancelEmit","timers","emit","args","timer","callback","useKeeper","arg","refresh","reducer","state","action","id","useToastContainer","forceUpdate","useReducer","toast","dispatch","containerRef","toastCount","queue","collection","instance","toastKey","displayedToast","containerId","isToastActive","getToast","type","appendToast","delay","staleId","options","updateId","isNotValid","data","closeToast","removeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","toastProps","isLoading","theme","icon","key","closeButton","rtl","transition","bodyClassName","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","queueLen","freeSlot","dequeueToast","toDequeue","removeFromCollection","toastContent","cloneElement","getToastToRender","toastToRender","toastList","Object","getX","getY","useToast","useState","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","syncProps","top","bottom","left","right","pauseToast","playToast","Math","document","bindFocusEvents","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd","CloseButton","ariaLabel","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","opacity","defaultClassName","cx","animationEvent","Svg","rest","width","height","fill","Icons","info","warning","success","error","spinner","Toast","Transition","cssClasses","isProgressControlled","maybeIcon","iconProps","Icon","renderCloseButton","Bounce","ToastContainer","containerStyle","pointerEvents","getClassName","newestOnTop","containers","lazy","generateToastId","getToastId","dispatchToast","containerDomNode","render","mergeOptions","createToastByType","pending","resetParams","resolver","params","input","result","promise","err","container","oldOptions","oldContent","nextOptions","config","containerConfig","latestInstance","containerInstance","item","Row","noGutters","decoratedBsPrefix","sizePrefix","cols"],"mappings":"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","file":"static/js/1.daa66d47.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"variant\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"];\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import React from 'react';\nvar context = /*#__PURE__*/React.createContext(null);\ncontext.displayName = 'CardContext';\nexport default context;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","function toVal(mix) {\n\tvar k, y, str='';\n\n\tif (typeof mix === 'string' || typeof mix === 'number') {\n\t\tstr += mix;\n\t} else if (typeof mix === 'object') {\n\t\tif (Array.isArray(mix)) {\n\t\t\tfor (k=0; k < mix.length; k++) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tif (y = toVal(mix[k])) {\n\t\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\t\tstr += y;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tfor (k in mix) {\n\t\t\t\tif (mix[k]) {\n\t\t\t\t\tstr && (str += ' ');\n\t\t\t\t\tstr += k;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn str;\n}\n\nexport default function () {\n\tvar i=0, tmp, x, str='';\n\twhile (i < arguments.length) {\n\t\tif (tmp = arguments[i++]) {\n\t\t\tif (x = toVal(tmp)) {\n\t\t\t\tstr && (str += ' ');\n\t\t\t\tstr += x\n\t\t\t}\n\t\t}\n\t}\n\treturn str;\n}\n","import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { ToastTransitionProps } from '../types';\n\nimport { collapseToast } from './collapseToast';\nimport { Default } from './constant';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import { useRef, useEffect } from 'react';\n\n/**\n * `useKeeper` is a helper around `useRef`.\n *\n * You don't need to access the `.current`property to get the value\n * If refresh is set to true. The ref will be updated every render\n */\nexport function useKeeper<T>(arg: T, refresh = false) {\n  const ref = useRef<T>(arg);\n\n  useEffect(() => {\n    if (refresh) ref.current = arg;\n  });\n\n  return ref.current;\n}\n","import { Id } from '../types';\n\nimport { isToastIdValid } from '../utils';\n\nexport const enum ActionType {\n  ADD,\n  REMOVE\n}\nexport type State = Array<Id>;\nexport type Action =\n  | { type: ActionType.ADD; toastId: Id; staleId?: Id }\n  | { type: ActionType.REMOVE; toastId?: Id };\n\nexport function reducer(state: State, action: Action) {\n  switch (action.type) {\n    case ActionType.ADD:\n      return [...state, action.toastId].filter(id => id !== action.staleId);\n    case ActionType.REMOVE:\n      return isToastIdValid(action.toastId)\n        ? state.filter(id => id !== action.toastId)\n        : [];\n  }\n}\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  Direction,\n  Default\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\nimport { useKeeper } from './useKeeper';\nimport { ActionType, reducer } from './toastContainerReducer';\n\ntype CollectionItem = Record<Id, Toast>;\ntype ToastToRender = Partial<Record<ToastPosition, Toast[]>>;\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toast, dispatch] = useReducer(reducer, []);\n  const containerRef = useRef(null);\n  let toastCount = useKeeper(0);\n  let queue = useKeeper<QueuedToast[]>([]);\n  const collection = useKeeper<CollectionItem>({});\n  const instance = useKeeper<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: id => collection[id] || null\n  });\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toast.length;\n    eventManager.emit(Event.Change, toast.length, props.containerId);\n  }, [toast]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function isToastActive(id: Id) {\n    return toast.indexOf(id) !== -1;\n  }\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      toastCount -= queue.length;\n      queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    dispatch({ type: ActionType.REMOVE, toastId });\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } = queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid({\n    containerId,\n    toastId,\n    updateId\n  }: NotValidatedToastProps) {\n    return !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        containerId !== instance.props.containerId) ||\n      (collection[toastId] && updateId == null)\n      ? true\n      : false;\n  }\n\n  // this function and all the function called inside needs to rely on ref(`useKeeper`)\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = options.updateId == null;\n\n    if (isNotAnUpdate) toastCount++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon || props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent: isNum(options.draggablePercent)\n        ? options.draggablePercent\n        : (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: isStr(options.role) ? options.role : props.role,\n      deleteToast() {\n        removeFromCollection(toastId);\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    //  tweak for vertical dragging\n    if (\n      toastProps.draggableDirection === Direction.Y &&\n      toastProps.draggablePercent === Default.DRAGGABLE_PERCENT\n    ) {\n      (toastProps.draggablePercent as number) *= 1.5;\n    }\n\n    let closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    toastProps.closeButton = closeButton;\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      toastCount > props.limit &&\n      isNotAnUpdate\n    ) {\n      queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) delete collection[staleId];\n\n    collection[toastId] = {\n      content,\n      props: toastProps\n    };\n    dispatch({\n      type: ActionType.ADD,\n      toastId,\n      staleId\n    });\n  }\n\n  function removeFromCollection(toastId: Id) {\n    delete collection[toastId];\n    const queueLen = queue.length;\n    toastCount = isToastIdValid(toastId)\n      ? toastCount - 1\n      : toastCount - instance.displayedToast;\n\n    if (toastCount < 0) toastCount = 0;\n\n    if (queueLen > 0) {\n      const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n      if (queueLen === 1 || freeSlot === 1) {\n        instance.displayedToast++;\n        dequeueToast();\n      } else {\n        const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n        instance.displayedToast = toDequeue;\n\n        for (let i = 0; i < toDequeue; i++) dequeueToast();\n      }\n    } else {\n      forceUpdate();\n    }\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toastToRender: ToastToRender = {};\n    const toastList = props.newestOnTop\n      ? Object.keys(collection).reverse()\n      : Object.keys(collection);\n\n    for (let i = 0; i < toastList.length; i++) {\n      const toast = collection[toastList[i]];\n      const { position } = toast.props;\n      toastToRender[position] || (toastToRender[position] = []);\n\n      toastToRender[position]!.push(toast);\n    }\n\n    return (Object.keys(toastToRender) as Array<ToastPosition>).map(p =>\n      cb(p, toastToRender[p]!)\n    );\n  }\n\n  return {\n    getToastToRender,\n    collection,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn } from '../utils';\nimport { ToastProps } from '../types';\nimport { useKeeper } from './useKeeper';\nimport { Direction } from '../utils/constant';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(true);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useKeeper<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null\n  });\n  const syncProps = useKeeper(props, true);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      if (isFn(syncProps.onClose))\n        syncProps.onClose(\n          isValidElement(syncProps.children) && syncProps.children.props\n        );\n    };\n  }, []);\n\n  useEffect(() => {\n    props.draggable && bindDragEvents();\n    return () => {\n      props.draggable && unbindDragEvents();\n    };\n  }, [props.draggable]);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight * (props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    if (drag.canDrag) {\n      e.preventDefault();\n\n      const toast = toastRef.current!;\n      if (isRunning) pauseToast();\n\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    const toast = toastRef.current!;\n    if (drag.canDrag) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { Icons } from './Icons';\nimport { ToastProps } from '../types';\nimport { Default, isFn, isStr } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n  const maybeIcon = Icons[type as keyof typeof Icons];\n  const iconProps = { theme, type };\n  let Icon: React.ReactNode = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (React.isValidElement(icon)) {\n    Icon = React.cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]: !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties =\n          toastList.length === 0\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Check whether any container is currently mounted in the DOM\n */\nfunction isAnyContainerMounted() {\n  return containers.size > 0;\n}\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substr(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (isAnyContainerMounted()) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nconst createToastByType = (type: string) => (\n  content: ToastContent,\n  options?: ToastOptions\n) => dispatchToast(content, mergeOptions(type, options));\n\nconst toast = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\ninterface ToastPromiseParams {\n  pending: string | UpdateOptions;\n  success: string | UpdateOptions;\n  error: string | UpdateOptions;\n}\n\nfunction handlePromise<T>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams,\n  options?: ToastOptions\n) {\n  const id = isStr(pending)\n    ? toast.loading(pending, options)\n    : toast.loading(pending.render, {\n        ...options,\n        ...(pending as ToastOptions)\n      });\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions,\n    result: T\n  ) => {\n    const params = isStr(input) ? { render: input } : input;\n    toast.update(id, {\n      type,\n      ...resetParams,\n      ...options,\n      ...params,\n      data: result\n    });\n    return result;\n  };\n  const p = isFn(promise) ? promise() : promise;\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;"],"sourceRoot":""}