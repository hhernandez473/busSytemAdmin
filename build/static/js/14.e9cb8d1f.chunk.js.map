{"version":3,"sources":["Demo/RegisterRouter/registerRouter.js","services/control.service.js"],"names":["RegisterRouter","handleChange","e","formObj","target","name","value","state","form","formErrors","setState","Object","keys","includes","formErrorsObj","errorMsg","validateField","validateForm","validateFunc","errorObj","forEach","x","msg","handleSubmit","length","town","route","controlService","post","then","res","toast","success","getRoutes","catch","error","data","editRoute","_id","btn","routeID","setList","country","departament","municipality","countryList","depList","muniList","townList","routeList","getCountries","getDepartament","getMunicipality","getTown","list","this","get","countries","console","log","departaments","Body","md","striped","bordered","hover","size","map","i","key","className","onClick","Group","controlId","Label","Control","as","onChange","index","type","placeholder","onBlur","Text","variant","closeButton","position","React","Component","ControlService","url","api","body","put","delete"],"mappings":"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","file":"static/js/14.e9cb8d1f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Form, Button, Table } from 'react-bootstrap';\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport controlService from '../../services/control.service';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nclass RegisterRouter extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            form: {\r\n                country: \"\",\r\n                departament: \"\",\r\n                municipality: \"\",\r\n                town: \"\",\r\n                route: ''\r\n            },\r\n            formErrors: {\r\n                country: null,\r\n                departament: null,\r\n                municipality: null,\r\n                town: null,\r\n                route: '',\r\n                routeID: '',\r\n                btn: false\r\n            },\r\n            countryList: [],\r\n            depList: [],\r\n            muniList: [],\r\n            townList: [],\r\n            routeList: []\r\n        }\r\n\r\n        this.getCountries();\r\n        this.getDepartament();\r\n        this.getMunicipality();\r\n        this.getTown();\r\n        this.getRoutes();\r\n    }\r\n\r\n    handleChange = e => {\r\n        const { name, value } = e.target;\r\n        const { form, formErrors } = this.state;\r\n\r\n        let formObj = {};\r\n\r\n        formObj = {\r\n            ...form,\r\n            [name]: value\r\n        };\r\n\r\n        this.setState({ form: formObj }, () => {\r\n            if (!Object.keys(formErrors).includes(name)) return;\r\n            let formErrorsObj = {};\r\n\r\n            const errorMsg = this.validateField(name, value);\r\n            formErrorsObj = { ...formErrors, [name]: errorMsg };\r\n            this.setState({ formErrors: formErrorsObj });\r\n        });\r\n    }\r\n\r\n    setList(list){\r\n        const { name, value } = list;\r\n        const { form, formErrors } = this.state;\r\n        let formObj = {\r\n            ...form,\r\n            [name]: value\r\n        };\r\n\r\n        this.setState({ form: formObj }, () => {\r\n            if (!Object.keys(formErrors).includes(name)) return;\r\n            let formErrorsObj = {};\r\n\r\n            const errorMsg = this.validateField(name, value);\r\n            formErrorsObj = { ...formErrors, [name]: errorMsg };\r\n            this.setState({ formErrors: formErrorsObj });\r\n        });\r\n    }\r\n\r\n    validateField = (name, value) => {\r\n        let errorMsg = null;\r\n        switch (name) {\r\n            case \"country\":\r\n                if (!value) errorMsg = \"Seleccione pa√≠s\";\r\n                break;\r\n\r\n            case \"departament\":\r\n                if (!value) errorMsg = \"Seleccione departamento\";\r\n                break;\r\n\r\n            case \"municipality\":\r\n                if (!value) errorMsg = \"Seleccione municipio\";\r\n                break;\r\n            case \"town\":\r\n                if (!value) errorMsg = \"Seleccione aldea o zona\";\r\n                break;\r\n            case \"route\":\r\n                if (!value) errorMsg = \"Ingrese nombre de ruta\";\r\n                break;\r\n            default: errorMsg = null;\r\n        }\r\n        return errorMsg;\r\n    }\r\n\r\n    validateForm = (form, formErrors, validateFunc) => {\r\n        const errorObj = {};\r\n        const validate = Object.keys(formErrors);\r\n        validate.forEach(x => {\r\n            const msg = validateFunc(x, form[x]);\r\n            if (msg) errorObj[x] = msg;\r\n        });\r\n        return errorObj;\r\n    };\r\n\r\n    handleSubmit = () => {\r\n        \r\n        const { form, formErrors } = this.state;\r\n        const errorObj = this.validateForm(form, formErrors, this.validateField);\r\n        if (Object.keys(errorObj).length !== 0) {\r\n            this.setState({ formErrors: { ...formErrors, ...errorObj } });\r\n            return false;\r\n        }\r\n        //console.log(form);\r\n        const { town, route} = form;\r\n        controlService.post( \"/route\", { town, name: route } ).then((res) => {\r\n            // this.setState({ townList: res.data.town });\r\n            // this.setList({name: \"town\", value: res.data.town[0]._id });\r\n            toast.success(\"Ruta creada correctamente.\");\r\n            this.getRoutes();\r\n        }).catch(error => {\r\n           toast.error(error.data.msg);\r\n        });\r\n    };\r\n\r\n    getCountries() {\r\n        \r\n        controlService.get(\"/country\").then((res) => {\r\n            this.setState({ countryList: res.data.countries })\r\n            this.setList({name: \"country\", value: res.data.countries[0]._id });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    getDepartament() {\r\n\r\n        controlService.get(\"/departament\").then((res) => {\r\n            this.setState({ depList: res.data.departaments })\r\n            this.setList({name: \"departament\", value: res.data.departaments[0]._id });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    getMunicipality() {\r\n\r\n        controlService.get(\"/municipality\").then((res) => {\r\n            this.setState({ muniList: res.data.municipality });\r\n            this.setList({name: \"municipality\", value: res.data.municipality[0]._id });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    getTown() {\r\n\r\n        controlService.get(\"/town\").then((res) => {\r\n            this.setState({ townList: res.data.town });\r\n            this.setList({name: \"town\", value: res.data.town[0]._id });\r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n\r\n    }\r\n\r\n    getRoutes(){\r\n        controlService.get(\"/route\").then((res) => {\r\n            this.setState({ routeList: res.data.route });\r\n           \r\n        }).catch(error => {\r\n            console.log(error);\r\n        });\r\n    }\r\n\r\n    editRoute = (route) => {\r\n        const { _id,  name } = route;\r\n        this.setState({\r\n            btn: true,\r\n            form: {\r\n                town: route.town._id,\r\n                route: name,\r\n                routeID: _id\r\n            }\r\n        });\r\n        this.setList({name: \"town\", value: route.town._id });\r\n    }\r\n\r\n    render() {\r\n        const { form, formErrors, countryList } = this.state;\r\n        return (\r\n            <>\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n\r\n                                <Card.Body>\r\n\r\n                                    <hr />\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n\r\n                                            <Table striped bordered hover size=\"sm\">\r\n                                                <thead>\r\n                                                    <tr>\r\n                                                        <th>#</th>\r\n                                                        <th>Aldea/Zona</th>\r\n                                                        <th>Nombre Ruta</th>\r\n                                                        <th>Editar</th>\r\n                                                        <th>Eliminar</th>\r\n                                                    </tr>\r\n                                                </thead>\r\n                                                <tbody>\r\n                                                    {\r\n                                                        this.state.routeList.map((route, i) => (\r\n                                                            <tr key={i}>\r\n                                                                <td key={i + 1}>{i + 1}</td>\r\n                                                                <td key={route.town._id}>{route.town.name}</td>\r\n                                                                <td key={route.name}>{route.name}</td>\r\n                                                                <td><i className=\"material-icons btn btn-warning\"\r\n                                                                    onClick={() => this.editRoute(route)}>edit</i>\r\n                                                                </td>\r\n                                                                <td><i className=\"material-icons btn btn-danger\"\r\n                                                                    onClick={() => this.getRoutes(route)}>delete</i>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        ))\r\n                                                    }\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n                                    <Row>\r\n\r\n                                        <Col md={4}>\r\n\r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Pais</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    name=\"country\"\r\n                                                    onChange={\r\n                                                        this.handleChange\r\n                                                    }\r\n                                                >\r\n                                                    {this.state.countryList.map(({ _id, name }, index) =>\r\n                                                        <option value={_id} key={index} > {name} </option>\r\n                                                    )}\r\n\r\n                                                </Form.Control>\r\n                                                {formErrors.country && (\r\n                                                    <span className=\"err\">{formErrors.country}</span>\r\n                                                )}\r\n                                            </Form.Group>\r\n\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n\r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Departamento</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    name=\"departament\"\r\n                                                    onChange={\r\n                                                        this.handleChange\r\n                                                    }\r\n                                                >\r\n                                                    {this.state.depList.map(({ _id, name }, index) =>\r\n                                                        <option value={_id} key={index} > {name} </option>\r\n                                                    )}\r\n\r\n                                                </Form.Control>\r\n                                                {formErrors.departament && (\r\n                                                    <span className=\"err\">{formErrors.departament}</span>\r\n                                                )}\r\n                                            </Form.Group>\r\n\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n\r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Municipio</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    name=\"municipality\"\r\n                                                    onChange={\r\n                                                        this.handleChange\r\n                                                    }\r\n                                                >\r\n                                                    {this.state.muniList.map(({ _id, name }, index) =>\r\n                                                        <option value={_id} key={index} > {name} </option>\r\n                                                    )}\r\n\r\n                                                </Form.Control>\r\n                                                {formErrors.municipality && (\r\n                                                    <span className=\"err\">{formErrors.municipality}</span>\r\n                                                )}\r\n                                            </Form.Group>\r\n\r\n                                        </Col>\r\n                                        \r\n\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col md={4}>\r\n\r\n                                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                                                <Form.Label>Zona/Aldea</Form.Label>\r\n                                                <Form.Control as=\"select\"\r\n                                                    name=\"town\"\r\n                                                    onChange={\r\n                                                        this.handleChange\r\n                                                    }\r\n                                                >\r\n                                                    {this.state.townList.map(({ _id, name }, index) =>\r\n                                                        <option value={_id} key={index} > {name} </option>\r\n                                                    )}\r\n\r\n                                                </Form.Control>\r\n                                                {formErrors.town && (\r\n                                                    <span className=\"err\">{formErrors.town}</span>\r\n                                                )}\r\n                                            </Form.Group>\r\n\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n\r\n                                            <Form.Group controlId=\"formBasicEmail\">\r\n                                                <Form.Label>Nombre de ruta</Form.Label>\r\n                                                <Form.Control\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"Nombre de ruta\"\r\n                                                    name=\"route\"\r\n                                                    value={form.route}\r\n                                                    onChange={this.handleChange}\r\n                                                    onBlur={this.handleChange} />\r\n                                                <Form.Text className=\"text-muted\">\r\n\r\n                                                </Form.Text>\r\n                                                {formErrors.route && (\r\n                                                    <span className=\"err\">{formErrors.route}</span>\r\n                                                )}\r\n                                            </Form.Group>\r\n\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Button variant=\"primary\" className=\"mt-4\" onClick={this.handleSubmit}>\r\n                                                Guardar\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                        </Col>\r\n                        <ToastContainer closeButton={false} position=\"bottom-right\" />\r\n                    </Row>\r\n                </Aux>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RegisterRouter;\r\n","import api from './api';\r\n\r\nclass ControlService {\r\n    //get services\r\n    get( url ) {\r\n        return api.get(url);\r\n    }\r\n\r\n    //post services\r\n    post( url, body ) {\r\n        return api.post( url, body );\r\n    }\r\n\r\n    //put services\r\n    put( url, body ) {\r\n        return api.put( url, body );\r\n    }\r\n\r\n    //put services\r\n    del( url ) {\r\n        return api.delete( url );\r\n    }\r\n\r\n}\r\n\r\nexport default new ControlService();"],"sourceRoot":""}