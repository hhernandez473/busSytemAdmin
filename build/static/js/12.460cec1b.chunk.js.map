{"version":3,"sources":["Demo/Schedule/Table.js","Demo/Schedule/tableData.js","Demo/Schedule/TableForm.js","Demo/Schedule/schedule.js","services/token.service.js","services/api.js","services/control.service.js"],"names":["Table","data","headers","handleRemove","startEditing","editIdx","handleChange","stopEditing","className","scope","map","h","i","key","name","r","currentlyEditing","k","type","onChange","e","prop","value","onClick","row","TableForm","state","departureTime","returnTime","errors","validateFields","iserror","push","setState","handleInputChange","target","createRow","preventDefault","newItem","props","addRow","currentTarget","reset","createSchedule","console","log","Row","Col","onSubmit","this","autoComplete","md","placeholder","role","React","Component","RegisterSchedule","item","prevState","nextState","filter","j","detail","d","length","find","n","toast","error","controlService","post","then","res","success","catch","msg","Card","Body","Button","variant","closeButton","position","TokenService","user","JSON","parse","localStorage","getItem","refreshToken","token","accessToken","setItem","stringify","removeItem","instance","axios","create","baseURL","interceptors","request","use","config","getLocalAccessToken","Promise","reject","response","err","a","originalConfig","url","status","_retry","getLocalRefreshToken","rs","updateLocalAccessToken","ControlService","api","get","body"],"mappings":"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","file":"static/js/12.460cec1b.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../Schedule/index.scss';\r\n\r\nconst row = (r, i, headers, handleRemove, startEditing, editIdx, handleChange, stopEditing) => {\r\n\r\n  const currentlyEditing = editIdx === i\r\n\r\n  return (\r\n\r\n    <tr key={`tr-${i}`}>\r\n      <td>{i}</td>\r\n      {headers.map((h, k) => (\r\n        <td key={`td-${k}`}>\r\n          {currentlyEditing ?\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              onChange={(e) => handleChange(e, h.prop, i)}\r\n              name={h.prop}\r\n              value={r[h.prop]}\r\n            /> : r[h.prop]}\r\n        </td>\r\n      ))}\r\n\r\n      {currentlyEditing ?\r\n        <td><i className=\"material-icons\"\r\n          onClick={() => stopEditing(i)}>check_circle</i>\r\n        </td> :\r\n\r\n        <td><i className=\"material-icons\"\r\n          onClick={() => startEditing(i)}>edit</i>\r\n        </td>}\r\n\r\n      <td><i className=\"material-icons\"\r\n        onClick={() => handleRemove(i)}>delete</i>\r\n      </td>\r\n    </tr>\r\n  )\r\n}\r\n\r\n\r\n\r\nconst Table = ({ data, headers, handleRemove, startEditing, editIdx, handleChange, stopEditing }) => (\r\n  < div >\r\n    <div className=\"card \">\r\n      <table className=\"table sizeTable \">\r\n        <thead>\r\n          <tr>\r\n            <th scope=\"col\">#</th>\r\n            {headers.map((h, i) =>\r\n              <th key={`th-${i}`} scope=\"col\">{h.name}</th>\r\n            )}\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody >\r\n          {data.map((r, i) =>\r\n            row(r, i, headers,\r\n              handleRemove,\r\n              startEditing,\r\n              editIdx,\r\n              handleChange,\r\n              stopEditing))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </div >\r\n)\r\n\r\n\r\nexport default Table\r\n\r\n\r\n","const headers = [\r\n    {\r\n        name: 'Hora de Salida',\r\n        prop: 'departureTime'\r\n    },\r\n    {\r\n        name: 'Hora de Retorno',\r\n        prop: 'returnTime'\r\n    },\r\n]\r\nexport default headers","import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Aux from \"../../hoc/_Aux\";\r\nclass TableForm extends React.Component {\r\n    state = {\r\n        departureTime: '',\r\n        returnTime: '',\r\n        name: '',\r\n        errors: ''\r\n    };\r\n\r\n    validateFields = () => {\r\n        let iserror = false\r\n        const errors = []\r\n\r\n        if (!this.state.departureTime) {\r\n            iserror = true\r\n            errors.push('La hora de salida es requerida')\r\n        }\r\n        if (!this.state.returnTime) {\r\n            iserror = true\r\n            errors.push('La hora de retorno es requerida')\r\n        }\r\n        if (iserror) {\r\n            this.setState({ errors })\r\n        }\r\n\r\n        return iserror\r\n    }\r\n\r\n    handleInputChange = (e) => {\r\n        const name = e.target.name\r\n        this.setState({\r\n            [name]: e.target.value\r\n        })\r\n    }\r\n\r\n    createRow = (e) => {\r\n        e.preventDefault();\r\n        const {name} = this.state;\r\n        const newItem = this.state\r\n        const er = this.validateFields()\r\n        if (!er) {\r\n            this.props.addRow(newItem)\r\n            this.setState({\r\n                departureTime: '',\r\n                returnTime: '',\r\n                name: name,\r\n                errors: ''\r\n            })\r\n            e.currentTarget.reset()\r\n\r\n        }\r\n    }\r\n\r\n    createSchedule = (e) => {\r\n        e.preventDefault();\r\n        \r\n        const newItem = this.state\r\n        e.currentTarget.reset()\r\n        console.log(newItem);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Aux>\r\n                    <Row>\r\n                        <Col>\r\n                            <form onSubmit={this.createSchedule} autoComplete=\"off\" >\r\n                                <Row>\r\n                                    <Col md={12} className=\"mb-4\">\r\n                                        <input type=\"text\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Nombre de Horario\"\r\n                                            name=\"name\" />\r\n                                    </Col>\r\n\r\n                                    \r\n                                </Row>\r\n\r\n                            </form>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n\r\n                            {this.state.errors &&\r\n                                <div className=\"alert alert-warning\" role=\"alert\">\r\n                                    {this.state.errors.map(e => <li>{e}</li>)}\r\n                                </div>\r\n                            }\r\n                            <form onSubmit={this.createRow} autoComplete=\"off\" >\r\n                                <Row>\r\n                                    <Col md={4}>\r\n                                        <input type=\"text\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Hora salida\"\r\n                                            name=\"departureTime\" />\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <input type=\"text\"\r\n                                            onChange={this.handleInputChange}\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Hora retorno\"\r\n                                            name=\"returnTime\" />\r\n                                    </Col>\r\n                                    <Col md={4}>\r\n                                        <button type=\"submit\"\r\n                                            className=\"btn-block btn btn-raised btn-primary\">\r\n                                            Agregar\r\n                                        </button>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </form>\r\n\r\n\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </Aux>\r\n\r\n            </>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default TableForm\r\n\r\n\r\n","import React from 'react';\r\nimport { Row, Col, Card, Form, Button } from 'react-bootstrap';\r\n\r\nimport controlService from '../../services/control.service';\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Table from './Table';\r\nimport headers from './tableData';\r\nimport TableForm from './TableForm';\r\n\r\nclass RegisterSchedule extends React.Component {\r\n\r\n\r\n    state = {\r\n        data: [],\r\n        headers: headers,\r\n        editIdx: -1,\r\n\r\n    };\r\n\r\n    addRow = (item) => {\r\n        const prevState = this.state.data\r\n        const nextState = [...prevState, item]\r\n        this.setState({\r\n            data: nextState\r\n        })\r\n    }\r\n\r\n    handleRemove = (i) => {\r\n        this.setState({\r\n            data: this.state.data.filter((item, j) => {\r\n                return j !== i\r\n            })\r\n        })\r\n    }\r\n\r\n    startEditing = (i) => {\r\n        this.setState({ editIdx: i })\r\n    }\r\n\r\n    stopEditing = (i) => {\r\n        this.setState({ editIdx: -1 })\r\n    }\r\n\r\n    handleChange = (e, name, i) => {\r\n        const { value } = e.target\r\n        this.setState({\r\n            data: this.state.data.map(\r\n                (row, j) => (j === i ? { ...row, [name]: value } : row)\r\n            )\r\n        })\r\n    }\r\n\r\n    createSchedule = () => {\r\n\r\n        //console.log(this.state.data);\r\n        const detail = this.state.data.map(d => ({ departureTime: d.departureTime, returnTime: d.returnTime }));\r\n        let name = \"\";\r\n        if (this.state.data.length > 0) name = this.state.data.find(n => n.name != \"\").name;\r\n\r\n        if (!name) {\r\n            toast.error(\"Ingrese nombre de Horario\");\r\n        }\r\n        controlService.post(\"/schedule\", { name, detail }).then((res) => {\r\n            // this.setState({ townList: res.data.town });\r\n            // this.setList({name: \"town\", value: res.data.town[0]._id });\r\n            this.setState({\r\n                data: []\r\n            })\r\n            toast.success(\"Horario creado correctamente.\");\r\n        }).catch(error => {\r\n            toast.error(error.data.msg);\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\" >\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Card>\r\n                            <Card.Body>\r\n                                <Row>\r\n                                    <Col  md={6}>\r\n                                        <Button variant=\"primary\" onClick={this.createSchedule} className=\"btn-block\" >\r\n                                            Guardar\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <div className=\"clearfix\"></div>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <TableForm\r\n                                            addRow={this.addRow}\r\n\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <Table\r\n                                            headers={headers}\r\n                                            data={this.state.data}\r\n                                            handleRemove={this.handleRemove}\r\n                                            startEditing={this.startEditing}\r\n                                            editIdx={this.state.editIdx}\r\n                                            handleChange={this.handleChange}\r\n                                            stopEditing={this.stopEditing}\r\n\r\n                                        />\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </Card.Body>\r\n\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <ToastContainer closeButton={false} position=\"bottom-right\" />\r\n                </Row>\r\n\r\n\r\n                {/* <li>{JSON.stringify(this.state.data, null, 2)}</li> */}\r\n\r\n\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default RegisterSchedule;\r\n","class TokenService {\r\n    getLocalRefreshToken() {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      return user?.refreshToken;\r\n    }\r\n  \r\n    getLocalAccessToken() {\r\n      const user = JSON.parse(localStorage.getItem(\"user\"));\r\n      return user?.token;\r\n    }\r\n  \r\n    updateLocalAccessToken(token) {\r\n      let user = JSON.parse(localStorage.getItem(\"user\"));\r\n      user.accessToken = token;\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n    }\r\n  \r\n    getUser() {\r\n      return JSON.parse(localStorage.getItem(\"user\"));\r\n    }\r\n  \r\n    setUser(user) {\r\n      console.log(JSON.stringify(user));\r\n      localStorage.setItem(\"user\", JSON.stringify(user));\r\n    }\r\n  \r\n    removeUser() {\r\n      localStorage.removeItem(\"user\");\r\n    }\r\n  }\r\n  \r\n  export default new TokenService();","import axios from \"axios\";\r\nimport TokenService from \"./token.service\";\r\n\r\nconst instance = axios.create({\r\n  //baseURL: \"http://localhost:8080/api\",\r\n  baseURL: \"https://appbus-backend.herokuapp.com/api\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\ninstance.interceptors.request.use(\r\n  (config) => {\r\n    const token = TokenService.getLocalAccessToken();\r\n    if (token) {\r\n      // config.headers[\"Authorization\"] = 'Bearer ' + token;  // for Spring Boot back-end\r\n      config.headers[\"x-token\"] = token; // for Node.js Express back-end\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\ninstance.interceptors.response.use(\r\n  (res) => {\r\n    return res;\r\n  },\r\n  async (err) => {\r\n    const originalConfig = err.config;\r\n\r\n    if (originalConfig.url !== \"/auth/signin\" && err.response) {\r\n      // Access Token was expired\r\n      if (err.response.status === 401 && !originalConfig._retry) {\r\n        originalConfig._retry = true;\r\n\r\n        try {\r\n          const rs = await instance.post(\"/auth/refreshtoken\", {\r\n            refreshToken: TokenService.getLocalRefreshToken(),\r\n          });\r\n\r\n          const { accessToken } = rs.data;\r\n          TokenService.updateLocalAccessToken(accessToken);\r\n\r\n          return instance(originalConfig);\r\n        } catch (_error) {\r\n          return Promise.reject(_error);\r\n        }\r\n      }else {\r\n        \r\n       return Promise.reject(err.response);\r\n      }\r\n    }\r\n\r\n    return Promise.reject(err);\r\n  }\r\n);\r\n\r\nexport default instance;","import api from './api';\r\n\r\nclass ControlService {\r\n    //get services\r\n    get( url ) {\r\n        return api.get(url);\r\n    }\r\n\r\n    //post services\r\n    post( url, body ) {\r\n        return api.post( url, body );\r\n    }\r\n\r\n}\r\n\r\nexport default new ControlService();"],"sourceRoot":""}